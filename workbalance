#!/usr/bin/env python
import subprocess
import datetime
import decimal
import re
from dateutil import rrule


def get_workdays(start, end):
    days_off = 5, 6
    workdays = range(5)
    days = rrule.rrule(rrule.DAILY, dtstart=start,
                       until=end, byweekday=workdays)
    return days.count()


def print_workbalance():
    start = datetime.date(2014, 04, 07)
    today = datetime.date.today()
    hourspd = (decimal.Decimal(38) / 5)
    output = subprocess.check_output(['hamster', 'search', '',
                                      str(start), str(today)])
    #
    # We need only the summary information and simply expecting it to be
    # the second before the end (which is just newlines).
    #
    summary = re.findall('\d+.\d+', output.splitlines()[-2])
    actual_hours = sum([decimal.Decimal(x) for x in summary])

    #
    # We calculate the differences based on hours, not on days. So break
    # the actual and expected hours down.
    #
    diff_days = get_workdays(start, today)
    expected_hours = diff_days * hourspd
    diff = actual_hours - expected_hours
    print("W: {0:.2f}").format(diff)


if __name__ == '__main__':
    print_workbalance()
